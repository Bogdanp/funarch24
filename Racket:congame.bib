
@article{krishnamurthi_implementation_2007,
	title = {Implementation and use of the {PLT} scheme {Web} server},
	volume = {20},
	issn = {1573-0557},
	url = {https://doi.org/10.1007/s10990-007-9008-y},
	doi = {10.1007/s10990-007-9008-y},
	abstract = {The PLT Scheme Web Server uses continuations to enable a natural, console-like program development style. We describe the implementation of the server and its use in the development of an application for managing conference paper reviews. In the process of developing this application, we encountered subtle forms of interaction not directly addressed by using continuations. We discuss these subtleties and offer solutions that have been successfully deployed in our application. Finally, we present some details on the server’s performance, which is comparable to that of the widely-used Apache Web server.},
	language = {en},
	number = {4},
	urldate = {2024-04-11},
	journal = {Higher-Order and Symbolic Computation},
	author = {Krishnamurthi, Shriram and Hopkins, Peter Walton and McCarthy, Jay and Graunke, Paul T. and Pettyjohn, Greg and Felleisen, Matthias},
	month = dec,
	year = {2007},
	keywords = {Applications, Conference management, Continuations, Interaction, Performance, Scheme, Web},
	pages = {431--460},
	file = {Full Text PDF:/Users/kaufmannm/Zotero/storage/RRGB6IYE/Krishnamurthi et al. - 2007 - Implementation and use of the PLT scheme Web serve.pdf:application/pdf},
}

@inproceedings{mccarthy_automatically_2009,
	address = {New York, NY, USA},
	series = {{ICFP} '09},
	title = {Automatically {RESTful} web applications: marking modular serializable continuations},
	isbn = {978-1-60558-332-7},
	shorttitle = {Automatically {RESTful} web applications},
	url = {https://doi.org/10.1145/1596550.1596594},
	doi = {10.1145/1596550.1596594},
	abstract = {Continuation-based Web servers provide distinct advantages over traditional Web application development: expressive power and modularity. This power leads to fewer errors and more interesting applications. Furthermore, these Web servers are more than prototypes; they are used in some real commercial applications. Unfortunately, they pay a heavy price for the additional power in the form of lack of scalability. We fix this key problem with a modular program transformation that produces scalable, continuation-based Web programs based on the REST architecture. Our programs use the same features as non-scalable, continuation-based Web programs, so we do not sacrifice expressive power for performance. In particular, we allow continuation marks in Web programs. Our system uses 10 percent (or less) of the memory required by previous approaches.},
	urldate = {2024-04-11},
	booktitle = {Proceedings of the 14th {ACM} {SIGPLAN} international conference on {Functional} programming},
	publisher = {Association for Computing Machinery},
	author = {McCarthy, Jay A.},
	month = aug,
	year = {2009},
	keywords = {continuations, stack inspection, web applications},
	pages = {299--310},
}

@article{flatt_adding_2007,
	title = {Adding delimited and composable control to a production programming environment},
	volume = {42},
	issn = {0362-1340, 1558-1160},
	url = {https://dl.acm.org/doi/10.1145/1291220.1291178},
	doi = {10.1145/1291220.1291178},
	abstract = {Operators for delimiting control and for capturing composable continuations litter the landscape of theoretical programming language research. Numerous papers explain their advantages, how the operators explain each other (or don't), and other aspects of the operators' existence. Production programming languages, however, do not support these operators, partly because their relationship to existing and demonstrably useful constructs - such as exceptions and dynamic binding - remains relatively unexplored.
            In this paper, we report on our effort of translating the theory of delimited and composable control into a viable implementation for a production system. The report shows how this effort involved a substantial design element, including work with a formal model, as well as significant practical exploration and engineering.
            The resulting version of PLT Scheme incorporates the expressive combination of delimited and composable control alongside dynamic-wind, dynamic binding, and exception handling. None of the additional operators subvert the intended benefits of existing control operators, so that programmers can freely mix and match control operators.},
	language = {en},
	number = {9},
	urldate = {2024-04-11},
	journal = {ACM SIGPLAN Notices},
	author = {Flatt, Matthew and Yu, Gang and Findler, Robert Bruce and Felleisen, Matthias},
	month = oct,
	year = {2007},
	pages = {165--176},
	file = {Available Version (via Google Scholar):/Users/kaufmannm/Zotero/storage/I7LQ43VR/Flatt et al. - 2007 - Adding delimited and composable control to a produ.pdf:application/pdf},
}

@inproceedings{mccarthy_automatically_2009-1,
	address = {Edinburgh Scotland},
	title = {Automatically {RESTful} web applications: marking modular serializable continuations},
	isbn = {978-1-60558-332-7},
	shorttitle = {Automatically {RESTful} web applications},
	url = {https://dl.acm.org/doi/10.1145/1596550.1596594},
	doi = {10.1145/1596550.1596594},
	language = {en},
	urldate = {2024-04-11},
	booktitle = {Proceedings of the 14th {ACM} {SIGPLAN} international conference on {Functional} programming},
	publisher = {ACM},
	author = {McCarthy, Jay A.},
	month = aug,
	year = {2009},
	pages = {299--310},
	file = {Available Version (via Google Scholar):/Users/kaufmannm/Zotero/storage/78FVKTVM/McCarthy - 2009 - Automatically RESTful web applications marking mo.pdf:application/pdf},
}

@inproceedings{rengglib_seasidemultiple_2004,
	title = {Seaside–a multiple control flow web application framework},
	volume = {2004},
	url = {https://scg.unibe.ch/assets/archive/papers/Duca04eSeaside.pdf},
	urldate = {2024-04-11},
	booktitle = {Proceedings of {ESUG} {Research} {Track}},
	author = {Rengglib, Stéphane Ducassea Adrian Lienhardb Lukas},
	year = {2004},
	pages = {231--257},
	file = {Available Version (via Google Scholar):/Users/kaufmannm/Zotero/storage/IPEMEUMN/Rengglib - 2004 - Seaside–a multiple control flow web application fr.pdf:application/pdf},
}

@article{ducasse_seaside_2007,
	title = {Seaside: {A} flexible environment for building dynamic web applications},
	volume = {24},
	shorttitle = {Seaside},
	url = {https://ieeexplore.ieee.org/abstract/document/4302687/},
	number = {5},
	urldate = {2024-04-11},
	journal = {IEEE software},
	author = {Ducasse, Stéphane and Lienhard, Adrian and Renggli, Lukas},
	year = {2007},
	note = {Publisher: IEEE},
	pages = {56--63},
	file = {Available Version (via Google Scholar):/Users/kaufmannm/Zotero/storage/GZQCZ9AC/Ducasse et al. - 2007 - Seaside A flexible environment for building dynam.pdf:application/pdf},
}

@book{ducasse_dynamic_2010,
	title = {Dynamic {Web} {Development} with {Seaside}},
	url = {https://inria.hal.science/inria-00531503},
	abstract = {Seaside is the open source framework of choice for developing sophisticated and dynamic web applications. Seaside uses the power of objects to master the web. With Seaside web applications is as simple as building desktop applications. Seaside lets you build highly dynamic and interactive web applications. Seaside supports agile development through interactive debugging and unit testing. Seaside is based on Smalltalk, a proven and robust language implemented by different vendors. Seaside is now available for all the major Smalltalk including Pharo, Squeak, GNU Smalltalk, Cincom Smalltalk, GemStone Smalltalk, and VA Smalltalk.},
	language = {en},
	urldate = {2024-04-11},
	publisher = {Square Bracket Associates},
	author = {Ducasse, Stéphane and Renggli, Lukas and C, David Shaffer and Zaccone, Rick},
	month = apr,
	year = {2010},
	note = {Pages: 356},
	file = {Snapshot:/Users/kaufmannm/Zotero/storage/ZT343XJQ/inria-00531503.html:text/html},
}

@article{ducasse_seaside_2007-1,
	title = {Seaside: {A} {Flexible} {Environment} for {Building} {Dynamic} {Web} {Applications}},
	volume = {24},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {0740-7459},
	shorttitle = {Seaside},
	url = {http://ieeexplore.ieee.org/document/4302687/},
	doi = {10.1109/MS.2007.144},
	language = {en},
	number = {5},
	urldate = {2024-04-11},
	journal = {IEEE Software},
	author = {Ducasse, Stéphane and Lienhard, Adrian and Renggli, Lukas},
	month = sep,
	year = {2007},
	pages = {56--63},
	file = {Ducasse et al. - 2007 - Seaside A Flexible Environment for Building Dynam.pdf:/Users/kaufmannm/Zotero/storage/QSE55MBC/Ducasse et al. - 2007 - Seaside A Flexible Environment for Building Dynam.pdf:application/pdf},
}
